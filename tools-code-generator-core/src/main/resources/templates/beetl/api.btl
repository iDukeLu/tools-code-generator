package ${config.apiPackage};

import io.swagger.annotations.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

@Api(tags = "${tag.name}", description = "${tag.description}")
@RestController
public class ${tag.name} {
    <%
        var service = {class: "", name: ""};
        var servicePrefix = strutil.replace(tag.name,"Controller","");
        var serviceSuffix = "Service";
        var service.class = servicePrefix + serviceSuffix;
        var service.name = strutil.toLowerCase(servicePrefix) + serviceSuffix;
    %>

    @Autowired
    private ${service.class} ${service.name};

<%for (entry in openAPI.paths) {

    var path = entry.value;
    var getOperation = path.get;
    var postOperation = path.post;
    var putOperation = path.put;
    var deleteOperation = path.delete;

    if (isNotEmpty(getOperation) && getOperation.tags[0] == tag.name) {%>
    @ApiOperation("${getOperation.summary!}")
    @GetMapping("${entry.key!}")
    public BookVO ${getOperation.operationId!}(<%
        for (parameter in getOperation.parameters) {
            var param = {annotation: "", class: "", name: ""};
            var position = parameter["in"];
            var type = parameter.type;
            var format = parameter.format;
            param.name = parameter.name;

            if (position == "path") {
                param.annotation = "@PathVariable";
            }
            if (position == "query") {
                param.annotation = "@RequestParam";
            }
            if (type == "integer" && format == "int32") {
                param.class = "Integer";
            }
            if (type == "integer" && format == "int64") {
                param.class = "Long";
            }
            if (type == "number" && format == "float") {
                param.class = "Float";
            }
            if (type == "number" && format == "double") {
                param.class = "Double";
            }
            if (type == "boolean") {
                param.class = "Boolean";
            }
            if (type == "string") {
                param.class = "String";
            }
            %>${param.annotation!}<%

            if (isNotEmpty(param.annotation)) {
                %> <%
            }
            %>${param.class!}<%
            if (isNotEmpty(param.class)) {
                %> <%
            }
            %>${param.name!}<%
            if (!parameterLP.last) {
                %>, <%
            }
        }
        %>) {
        return ${service.name}.${getOperation.operationId!}(<%
            for (parameter in getOperation.parameters) {
                %>${parameter.name}<%
                if (!parameterLP.last) {
                    %>, <%
                }
            }
            %>);
    }
    <%}
}%>

}